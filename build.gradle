buildscript {
	repositories {
		maven { url 'https://plugins.gradle.org/m2/' }
		mavenCentral()
	}
	dependencies {
		classpath 'com.gradle.publish:plugin-publish-plugin:0.9.7'
		classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
		classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.9.0'
	}
}

apply plugin: 'groovy'
apply plugin: 'idea'

repositories {
	mavenCentral()
}

ext {
	javaVersion = JavaVersion.VERSION_1_7
	springBootVersion = project.hasProperty('springBootVersion') ? project.property(
		'springBootVersion') : 'latest.release'
}

idea {
	module {
		downloadSources = false
		downloadJavadoc = false
	}
}
logger.lifecycle('springBootVersion: ' + springBootVersion)

configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
	}

	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.name == 'spring-boot-gradle-plugin') {
			details.useVersion(springBootVersion)
		}
		if (details.requested.name == 'groovy-all') {
			details.useVersion(GroovySystem.version)
		}
		if (details.requested.group == 'org.hamcrest') {
			details.useVersion('1.3')
		}
	}
}

dependencies {
	compile 'ru.itbasis.gradle.plugins:java-module-gradle-plugin:latest.release'
	compile "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"

	testCompile 'junit:junit:latest.release'
	testCompile 'org.hamcrest:hamcrest-library:latest.release'
}

tasks.withType(AbstractCompile).all {
	sourceCompatibility = javaVersion.toString()
	targetCompatibility = javaVersion.toString()
}

if (project == rootProject) {
	apply from: 'gradle/publish.gradle'
}